spring:
  application:
    name: ecommerce-analytics-api
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/ecommerce_analytics}
    username: ${PGUSER:postgres}
    password: ${PGPASSWORD:password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    timeout: 2000ms
  
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:kafka:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: analytics-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

server:
  port: 8080
  servlet:
    context-path: /api/v1

app:
  jwt:
    secret: ${JWT_SECRET:myDockerSecretKey123}
    expiration: 86400000

logging:
  level:
    com.ecommerce.analytics: INFO
    org.springframework.kafka: WARN
    org.flywaydb: INFO